var flvjs;(()=>{"use strict";var t={d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};function n(){this.tagType=-1,this.dataSize=-1,this.Timestamp=-1,this.StreamID=-1,this.body=-1,this.time=-1,this.arr=[],this.size=-1}t.r(e),t.d(e,{createFlv:()=>r});const i=new function(){const t=this;function e(e){const n=t.tempUint8.slice(t.index,t.index+e);return t.index+=e,n}function i(){for(;t.index<t.tempUint8.length&&!t.stop;){t.offset=t.index;const i=new n;t.tempUint8.length-t.index>=11?(i.tagType=e(1)[0],i.dataSize=e(3),i.Timestamp=e(4),i.StreamID=e(3),t.tempUint8.length-t.index>=r(i.dataSize)+4?(i.body=e(r(i.dataSize)),9==i.tagType&&t._hasVideo&&t.arrTag.push(i),8==i.tagType&&t._hasAudio&&t.arrTag.push(i),18==i.tagType&&(0==t.arrTag.length?t.arrTag.push(i):console.log("这是截获的自定义数据",i)),i.size=e(4),t.offset=t.index,console.log("==> parse",t.offset,i)):t.stop=!0):t.stop=!0}return t.offset}function r(t){let e="";return e+=1==t[0].toString(16).length?"0"+t[0].toString(16):t[0].toString(16),e+=1==t[1].toString(16).length?"0"+t[1].toString(16):t[1].toString(16),e+=1==t[2].toString(16).length?"0"+t[2].toString(16):t[2].toString(16),parseInt(e,16)}return this.tempUint8=new Uint8Array,this.arrTag=[],this.index=0,this.tempArr=[],this.stop=!1,this.offset=0,this.frist=!0,this._hasAudio=!1,this._hasVideo=!1,{acceptFlv:function(n){return t.stop=!1,t.arrTag=[],t.index=0,t.tempUint8=n,t.tempUint8.length>13&&70==t.tempUint8[0]&&76==t.tempUint8[1]&&86==t.tempUint8[2]?(function(t){const e=new Uint8Array(t),n={match:!1};if(70!==e[0]||76!==e[1]||86!==e[2]||1!==e[3])return n;const i=(4&e[4])>>>2!=0,r=0!=(1&e[4])}(t.tempUint8.buffer),e(9),e(4),i(),t.frist=!1,t.offset):t.frist?t.offset:i()},get arrTag(){return t.arrTag}}};function r(){let t=!0;return this._onInitSegment=null,this._onMediaSegment=null,this._onMediaInfo=null,{setFlv:function(e){const n=t?function(e){t=!1;let n=i.acceptFlv(new Uint8Array(e));if(18!=i.arrTag[0].tagType)throw new Error("without metadata tag");return i.arrTag.length,n}(e):function(t){const e=i.acceptFlv(new Uint8Array(t));return i.arrTag.length,e}(e);return n},set onInitSegment(t){this._onInitSegment=t},set onMediaSegment(t){this._onMediaSegment=t},set onMediaInfo(t){this._onMediaInfo=t}}}flvjs=e})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,